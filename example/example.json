{
  "openapi": "3.0.0",
  "info": {
    "title": "LaunchDarkly REST API",
    "description": "Build custom integrations with the LaunchDarkly REST API",
    "contact": {
      "name": "LaunchDarkly Technical Support Team",
      "url": "https://support.launchdarkly.com",
      "email": "support@launchdarkly.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://app.launchdarkly.com"
    }
  ],
  "paths": {
    "/api/v2/foo": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful foo response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/example.FooResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "tags": [
          "Foo"
        ],
        "summary": "Get all foos",
        "description": " Get all foos",
        "operationId": "getAllFoos"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful foo response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/example.FooResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "summary": "Put foo",
        "description": " Overwrite a foo"
      }
    },
    "/api/v2/foo-spaces": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful foo response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/example.FooResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "tags": [
          "Foo With Spaces"
        ],
        "summary": "Get foos with spaces",
        "description": " Get foos with spaces",
        "operationId": "getFoosWithSpaces"
      }
    },
    "/api/v2/foo/{id}": {
      "patch": {
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "summary": "Update foo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Foo id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "Foo id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/example.FooPatchOperationSet"
                  },
                  {
                    "$ref": "#/components/schemas/example.FooMergePatch"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "operationId": "patchFoo"
      }
    },
    "/api/v2/foo/{id}/inner": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful innerfoo response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/example.InnerFoo"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "summary": "Get inner foos",
        "description": " Get Inner Foos"
      }
    },
    "/api/v2/vfoo": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful foo response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/example.FooResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid resource identifier"
          }
        },
        "tags": [
          "Vfoo"
        ],
        "summary": "Get Foo as var",
        "description": " get a foo var"
      }
    }
  },
  "components": {
    "schemas": {
      "example.BsonID": {
        "type": "string"
      },
      "example.DoubleAlias": {
        "type": "object",
        "additionalProperties": {}
      },
      "example.Environment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "example.FooMergePatch": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "example.FooPatchOperation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "example.FooPatchOperationSet": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "op": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "example.FooResponse": {
        "type": "object",
        "properties": {
          "bsonId": {
            "$ref": "#/components/schemas/example.BsonID"
          },
          "id": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "$ref": "#/components/schemas/example.UnixMillis"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 6
          },
          "msg": {
            "type": "object"
          },
          "foo": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "a": {
                  "type": "string"
                },
                "b": {
                  "type": "string"
                }
              }
            }
          },
          "environments": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "freeForm": {},
          "jsonMap": {
            "$ref": "#/components/schemas/example.JsonMap"
          },
          "doubleAlias": {
            "$ref": "#/components/schemas/example.DoubleAlias"
          },
          "interfaceBlah": {
            "$ref": "#/components/schemas/example.InterfaceResponse"
          },
          "instruction": {
            "$ref": "#/components/schemas/example.Instruction"
          },
          "bsonPtr": {
            "example": "blah blah blah",
            "$ref": "#/components/schemas/example.BsonID"
          },
          "randomBool": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "example.InnerFoo": {
        "type": "object",
        "properties": {
          "a": {
            "type": "string"
          },
          "b": {
            "type": "string"
          }
        }
      },
      "example.Instruction": {
        "type": "object",
        "additionalProperties": {}
      },
      "example.InterfaceResponse": {},
      "example.JsonMap": {
        "type": "object",
        "additionalProperties": {}
      },
      "example.UnixMillis": {
        "type": "integer",
        "format": "int64"
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "ApiKey": [
        "read",
        "write"
      ]
    }
  ],
  "tags": [
    {
      "name": "Foo"
    },
    {
      "name": "Bar",
      "description": "Baz"
    }
  ]
}